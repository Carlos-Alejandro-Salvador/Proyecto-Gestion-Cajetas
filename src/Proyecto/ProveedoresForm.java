/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Proyecto;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author MEMO
 */
public class ProveedoresForm extends javax.swing.JFrame {

    /**
     * Creates new form ProveedoresForm
     */
    static int caso;
    
    public ProveedoresForm(int x) {
        caso = x;
        initComponents();
        switch (caso){
            case 1:
                btnEliminar.setVisible(false);
                btnBuscar.setVisible(false);
                btnGuardar.setVisible(true);
                txtProveedor.setEnabled(false);
                
                PreparedStatement stmt = null;
                ResultSet rs = null;
                try {
                    String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                            + "password = 123;encrypt=true;trustServerCertificate=true;";
                    Connection conect = DriverManager.getConnection(connectionUrl);
                    for(int i = 1; i<99; i ++){
                        if(i < 10){
                            stmt = conect.prepareStatement("SELECT ClaveProveedor FROM Proveedores where ClaveProveedor = 'p-0" + i + "'");
                            rs = stmt.executeQuery();
                            if(!rs.next()){
                                txtProveedor.setText("p-0" + i);
                                break;
                            }
                            
                        }   else    {
                            stmt = conect.prepareStatement("SELECT ClaveProveedor FROM Proveedores where ClaveProveedor = 'p-" + i + "'");
                            rs = stmt.executeQuery();
                            if(!rs.next()){
                                txtProveedor.setText("p-" + i);
                                break;
                            }
                            
                        }
                    }
                 } 
                catch (SQLException ex) 
                {
                  System.out.println("Error." + ex.getMessage());
                }  
                
                break;
            case 2:
                btnEliminar.setVisible(false);
                btnBuscar.setVisible(true);
                btnGuardar.setVisible(false);
                txtMaterno.setEnabled(false);
                txtNombre.setEnabled(false);
                txtPaterno.setEnabled(false);
                txtTelefono.setEnabled(false);
                txtMarca.setEnabled(false);
                break;
            case 3:
                btnBuscar.setVisible(true);
                btnGuardar.setEnabled(false);
                btnEliminar.setVisible(false);                
                txtMaterno.setEnabled(false);
                txtNombre.setEnabled(false);
                txtPaterno.setEnabled(false);
                txtTelefono.setEnabled(false);
                txtMarca.setEnabled(false);
                break;
            case 4:
                btnEliminar.setEnabled(false);
                btnBuscar.setVisible(true);
                btnGuardar.setVisible(false);
                txtMaterno.setEnabled(false);
                txtNombre.setEnabled(false);
                txtPaterno.setEnabled(false);
                txtTelefono.setEnabled(false);
                txtMarca.setEnabled(false);
            
            
        }
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtProveedor = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtPaterno = new javax.swing.JTextField();
        txtMaterno = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel1.setText("Clave del Proveedor:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel2.setText("Nombre del Proveedor");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel3.setText("Apellido Paterno:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel4.setText("Apellido Materno:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel5.setText("Telefono del Proveedor:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel6.setText("Empresa:");

        txtProveedor.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProveedorActionPerformed(evt);
            }
        });

        txtNombre.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        txtPaterno.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtPaterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaternoActionPerformed(evt);
            }
        });

        txtMaterno.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtMaterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaternoActionPerformed(evt);
            }
        });

        txtTelefono.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoActionPerformed(evt);
            }
        });

        txtMarca.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMarcaActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Proveedores");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        btnBuscar.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnRegresar.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel10.setText("Nombre:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(59, 59, 59)
                                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(315, 315, 315)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnEliminar)
                    .addComponent(btnRegresar))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProveedorActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtPaternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaternoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPaternoActionPerformed

    private void txtMaternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaternoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaternoActionPerformed

    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoActionPerformed

    private void txtMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMarcaActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        
        String proveedor = validacionClave(txtProveedor.getText(), "Clave del Proveedor", "p-",4);
        String nombre = validacionTexto(txtNombre.getText(), "Nombre", 20, false, false);
        String paterno = validacionTexto(txtPaterno.getText(), "Apellido Paterno", 15, false, false);
        String materno = validacionTexto(txtMaterno.getText(),"Apellido Materno", 15, false, false);
        String marca = validacionTexto(txtMarca.getText(), "Empresa", 15, false, false);
        int auxTelefono = validacionInt(txtTelefono.getText(), "Telefono", 15);
        String telefono = String.valueOf(auxTelefono);
        
        PreparedStatement stmt = null;
        
        if(!(proveedor == "no" || nombre == "no" || paterno == "no" || materno == "no" || marca == "no" || auxTelefono == -1 )){
            try {
             String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                     + "password = 123;encrypt=true;trustServerCertificate=true;";
             Connection conect = DriverManager.getConnection(connectionUrl);
             if(caso == 1){
                stmt = conect.prepareStatement("insert into Proveedores values('" + proveedor + "', '" + nombre +"', '" + paterno + "', '" + materno + "', '" + marca +"', '" + telefono + "')");
                 JOptionPane.showMessageDialog(null, "Proveedor ingresado con exito.");
                    super.dispose();
                    GestorProveedores gestor = new GestorProveedores();
                    gestor.setVisible(true);
                stmt.executeQuery();
             }  else    {
                stmt = conect.prepareStatement("update Proveedores set NomProv = '" + nombre + "', APProv = '" + paterno +
                        "', AMProv = '" + materno + "', MarcaProv = '" +  marca + "', TelefonoProv = '" + telefono + 
                        "' where ClaveProveedor = '" + proveedor + "'"
                        );
                JOptionPane.showMessageDialog(null, "Proveedor modificado con exito.");
                stmt.executeQuery(); 
             }

            } 
            catch (SQLException ex) 
            {
              System.out.println("Error." + ex.getMessage());
            }  
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        
            super.dispose();
            GestorProveedores gpr = new GestorProveedores();
            gpr.setVisible(true);
        
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        
        String proveedor = validacionClave(txtProveedor.getText(), "Clave del Proveedor", "p-", 4);
        
        
        PreparedStatement stmt = null;
        ResultSet rs = null;
        
        if(caso == 2){
            try {
                String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                        + "password = 123;encrypt=true;trustServerCertificate=true;";
                Connection conect = DriverManager.getConnection(connectionUrl);
                stmt = conect.prepareStatement("select ClaveProveedor from Proveedores where ClaveProveedor = '" + proveedor + "'");
                rs = stmt.executeQuery();

                if(!rs.next()){
                    System.out.println("Asd");
                }   else    {
                    stmt = conect.prepareStatement("select * from Proveedores where ClaveProveedor = '" + proveedor + "'");
                    rs = stmt.executeQuery();
                    while(rs.next()) {
                        for (int y=1;y<=rs.getMetaData().getColumnCount();y++){
                            switch(y){
                                case 2:
                                    txtNombre.setText(rs.getString(y));
                                    break;
                                case 3:    
                                    txtPaterno.setText(rs.getString(y));
                                    break;
                                case 4:    
                                    txtMaterno.setText(rs.getString(y));
                                    break;
                                case 5:    
                                    txtMarca.setText(rs.getString(y));
                                    break;
                                case 6:
                                    txtTelefono.setText(rs.getString(y));
                                    break;
                            }
                        }
                   }                        
               }
            } 
            catch (SQLException ex) 
            {
                System.out.println("Error." + ex.getMessage());
            }  
        }   else if(caso == 3)    {
            try {
                String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                        + "password = 123;encrypt=true;trustServerCertificate=true;";
                Connection conect = DriverManager.getConnection(connectionUrl);
                stmt = conect.prepareStatement("select ClaveProveedor from Proveedores where ClaveProveedor = '" + proveedor + "'");
                rs = stmt.executeQuery();

                if(!rs.next()){
                    System.out.println("Asd");
                }   else    {
                    stmt = conect.prepareStatement("select * from Proveedores where ClaveProveedor = '" + proveedor + "'");
                    rs = stmt.executeQuery();
                    while(rs.next()) {
                        for (int y=1;y<=rs.getMetaData().getColumnCount();y++){
                            switch(y){
                                case 2:
                                    txtNombre.setText(rs.getString(y));
                                    break;
                                case 3:    
                                    txtPaterno.setText(rs.getString(y));
                                    break;
                                case 4:    
                                    txtMaterno.setText(rs.getString(y));
                                    break;
                                case 5:    
                                    txtMarca.setText(rs.getString(y));
                                    break;
                                case 6:
                                    txtTelefono.setText(rs.getString(y));
                                    break;
                            }
                        }
                    }     
                    btnGuardar.setEnabled(true);                
                    txtMaterno.setEnabled(true);
                    txtNombre.setEnabled(true);
                    txtPaterno.setEnabled(true);
                    txtTelefono.setEnabled(true);
                    txtMarca.setEnabled(true);
                    
               }
            } 
            catch (SQLException ex) 
            {
                System.out.println("Error." + ex.getMessage());
            }
        }   else    {
            try {
                String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                        + "password = 123;encrypt=true;trustServerCertificate=true;";
                Connection conect = DriverManager.getConnection(connectionUrl);
                stmt = conect.prepareStatement("select ClaveProveedor from Proveedores where ClaveProveedor = '" + proveedor + "'");
                rs = stmt.executeQuery();
                if(!rs.next()){
                    System.out.println("Asd");
                }   else    {
                    stmt = conect.prepareStatement("select * from Proveedores where ClaveProveedor = '" + proveedor + "'");
                    rs = stmt.executeQuery();
                    while(rs.next()) {
                        for (int y=1;y<=rs.getMetaData().getColumnCount();y++){
                            switch(y){
                                case 2:
                                    txtNombre.setText(rs.getString(y));
                                    break;
                                case 3:    
                                    txtPaterno.setText(rs.getString(y));
                                    break;
                                case 4:    
                                    txtMaterno.setText(rs.getString(y));
                                    break;
                                case 5:    
                                    txtMarca.setText(rs.getString(y));
                                    break;
                                case 6:
                                    txtTelefono.setText(rs.getString(y));
                                    break;
                            }
                        }
                    } 
                    btnEliminar.setEnabled(true);                                    
               }

            } 
            catch (SQLException ex) 
            {
              System.out.println("Error." + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        PreparedStatement stmt = null;
        String proveedor = txtProveedor.getText();
        try {
            String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                    + "password = 123;encrypt=true;trustServerCertificate=true;";
            Connection conect = DriverManager.getConnection(connectionUrl);
           
            stmt = conect.prepareStatement("Delete FROM Proveedores where ClaveProveedor = '" + proveedor + "'");
            JOptionPane.showMessageDialog(null, "Proveedor eliminado con éxito.");
            super.dispose();
            GestorProveedores gestor = new GestorProveedores();
            gestor.setVisible(true);
            stmt.executeQuery();
            
         } 
        catch (SQLException ex) 
        {
          System.out.println("Error." + ex.getMessage());
        }  
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static String validacionClave(String Cadena, String valor, String tipo, int caracteres){
        boolean validado = false;
        float num;
        if(Cadena.length()!= caracteres) {
            JOptionPane.showMessageDialog(null, "Ingrese un valor para " + valor + ".");
            validado = false;
        } else if (Cadena.substring(0, tipo.length()).equals(tipo)) {
            for(int x = caracteres-2; x < Cadena.length(); x++){
                if(Cadena.charAt(x) >= '0' && Cadena.charAt(x) <= '9') {
                    validado = true;
                } else {
                    JOptionPane.showMessageDialog(null, "Ingrese un valor correcto para " + valor + ".");
                    validado = false;
                    break;               
                }   
            }  
        }
        if (validado) {
            return Cadena;
        }
        return "no";
    }
    
    public static String validacionTexto(String Cadena, String valor, int caracteres, boolean gato, boolean numeros){
        boolean validado = false;
        if(Cadena.equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese un valor para " + valor + ".");
            validado = false;
        } else if (Cadena.length() >= caracteres) {
            JOptionPane.showMessageDialog(null, "Ingrese dentro del rango establecido para " + valor + ".");
            validado = false;
            return "no";
        }
        for(int x = 0; x < Cadena.length(); x++){
            int num = (int) Cadena.charAt(x);
            if(((num >= 97 && num <= 122) || (num >= 65 && num <= 90)) || (Cadena.charAt(x) == '#' && gato) || ((Cadena.charAt(x) >= '0' && Cadena.charAt(x) <= '9')&&(numeros))) {
                validado = true;
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un valor correcto para " + valor + ".");
                validado = false;
                break;               
            }
        }  
        if (validado) {
            return Cadena;
        }
        return "no";
    }
    
    public static int validacionInt(String numeroCad, String valor, int longitud){
        boolean validado = false;
        int num, cont = 0;
        if(numeroCad.equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese un valor para " + valor + ".");
            validado = false;
        }
        for(int x = 0; x < numeroCad.length(); x++){
            if(numeroCad.charAt(x) >= '0' && numeroCad.charAt(x) <= '9') {
                validado = true;
                cont++;
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un valor correcto para " + valor + ".");
                validado = false;
                break;               
            }
            if(cont > longitud) {
                JOptionPane.showMessageDialog(null, "Ingrese un valor dentro del rango para " + valor + ".");
                validado = false;
                break;
            }
        }  
        if (validado) {
            num = Integer.parseInt(numeroCad);
            return num;
        }
        return -1;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProveedoresForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProveedoresForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProveedoresForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProveedoresForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProveedoresForm(caso).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtMaterno;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPaterno;
    private javax.swing.JTextField txtProveedor;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
