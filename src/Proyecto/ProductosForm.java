/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Proyecto;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author MEMO
 */
public class ProductosForm extends javax.swing.JFrame {

    /**
     * Creates new form ProductosForm
     */
    static int caso;
    public ProductosForm(int x) {
        caso = x;
        initComponents();
        switch (caso){
            case 1:
                btnEliminar.setVisible(false);
                btnBuscar.setVisible(false);
                btnGuardar.setVisible(true);
                txtProducto.setEnabled(false);
                PreparedStatement stmt = null;
                txtGanancia.setVisible(false);
                ResultSet rs = null;
                try {
                    String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                            + "password = 123;encrypt=true;trustServerCertificate=true;";
                    Connection conect = DriverManager.getConnection(connectionUrl);
                    for(int i = 1; i<99; i ++){
                        if(i < 10){
                            stmt = conect.prepareStatement("SELECT ClaveProd FROM Productos where ClaveProd = 'po-0" + i + "'");
                            rs = stmt.executeQuery();
                            if(!rs.next()){
                                txtProducto.setText("po-0" + i);
                                break;
                            }
                            
                        }   else    {
                            stmt = conect.prepareStatement("SELECT ClaveProd FROM Productos where ClaveProd = 'po-" + i + "'");
                            rs = stmt.executeQuery();
                            if(!rs.next()){
                                txtProducto.setText("po-" + i);
                                break;
                            }
                            
                        }
                    }
                 } 
                catch (SQLException ex) 
                {
                  System.out.println("Error." + ex.getMessage());
                }  
                break;
            case 2:
                btnEliminar.setVisible(false);
                btnBuscar.setVisible(true);
                btnGuardar.setVisible(false);
                txtNombre.setEnabled(false);
                txtMarca.setEnabled(false);
                txtContenido.setEnabled(false);
                txtCantidad.setEnabled(false);
                txtCompra.setEnabled(false);
                txtVenta.setEnabled(false);
                txtGanancia.setEnabled(false);
                break;
            case 3:
                btnBuscar.setVisible(true);
                btnGuardar.setEnabled(false);
                btnEliminar.setVisible(false);                
                txtNombre.setEnabled(false);
                txtMarca.setEnabled(false);
                txtContenido.setEnabled(false);
                txtCantidad.setEnabled(false);
                txtCompra.setEnabled(false);
                txtVenta.setEnabled(false);
                txtGanancia.setEnabled(false);
                break;
            case 4:
                btnEliminar.setEnabled(false);
                btnBuscar.setVisible(true);
                btnGuardar.setVisible(false);
                txtNombre.setEnabled(false);
                txtMarca.setEnabled(false);
                txtContenido.setEnabled(false);
                txtCantidad.setEnabled(false);
                txtCompra.setEnabled(false);
                txtVenta.setEnabled(false);
                txtGanancia.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtProducto = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        txtContenido = new javax.swing.JTextField();
        txtCompra = new javax.swing.JTextField();
        txtVenta = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtGanancia = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel1.setText("Clave del Producto:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel2.setText("Nombre del Producto:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel3.setText("Contenido del Producto:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel4.setText("Costo de Compra:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel5.setText("Precio de Venta:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel6.setText("Ganancia:");

        txtProducto.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductoActionPerformed(evt);
            }
        });

        txtNombre.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        txtMarca.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMarcaActionPerformed(evt);
            }
        });

        txtContenido.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtContenido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContenidoActionPerformed(evt);
            }
        });

        txtCompra.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCompraActionPerformed(evt);
            }
        });

        txtVenta.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVentaActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Productos");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        btnBuscar.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnRegresar.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel10.setText("Marca del Producto:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel7.setText("Cantidad en Existencia:");

        txtGanancia.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N

        txtCantidad.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addGap(34, 34, 34)))
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(59, 59, 59)
                                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtContenido, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtCantidad, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtGanancia, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtVenta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtContenido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtGanancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnEliminar)
                    .addComponent(btnRegresar))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductoActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMarcaActionPerformed

    private void txtContenidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContenidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContenidoActionPerformed

    private void txtCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCompraActionPerformed

    private void txtVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVentaActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        String producto = validacionClave(txtProducto.getText(),"Clave del producto", "po-", 5);
        String nombre = validacionTexto(txtNombre.getText(), "Nombre", 12, false, false);
        String marca = validacionTexto(txtMarca.getText(), "Marca", 15, false, false);
        String contenidoProd = validacionTexto(txtContenido.getText(), "Contenido", 7 ,false,false);
        int cantidadEx = validacionInt(txtCantidad.getText(), "Cantidad", 2);
        float costoCompra = validacionFloat(txtCompra.getText(), "Costo de Compra",2,2);
        float precioVenta = validacionFloat(txtVenta.getText(), "Precio de Venta",2,2);
        float ganancia = precioVenta - costoCompra;
        txtGanancia.setText(Float.toString(ganancia));
        
        PreparedStatement stmt = null;
        if(!(producto == "no" || nombre == "no" || marca == "no" || contenidoProd == "no" || cantidadEx == -1 || costoCompra == -1.001 || precioVenta == -1.001 )){
            try {
             String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                     + "password = 123;encrypt=true;trustServerCertificate=true;";
             Connection conect = DriverManager.getConnection(connectionUrl);
             if(caso == 1){
                stmt = conect.prepareStatement("insert into Productos values('" + producto + "', '" + nombre +"', '" + marca + "', '" + contenidoProd + "', " + cantidadEx +", " + costoCompra + ", " + precioVenta +", " + ganancia +")");
                JOptionPane.showMessageDialog(null, "Producto ingresado con exito.");
                    super.dispose();
                    GestionarProductos gestor = new GestionarProductos();
                    gestor.setVisible(true);
                stmt.executeQuery();
             }  else    {
                stmt = conect.prepareStatement("update Productos set NombreProducto = '" + nombre + "', Marca = '" + marca +
                        "', ContenidoProd = '" + contenidoProd + "', CantidadEx = " +  cantidadEx + ", CostoCompra = " +  costoCompra + ", PrecioVenta = " +  precioVenta + ", Ganancia = " +  ganancia + 
                        " where ClaveProd = '" + producto + "'"
                        );
                JOptionPane.showMessageDialog(null, "Producto modificado con exito.");
                stmt.executeQuery(); 
             }

            } 
            catch (SQLException ex) 
            {
              System.out.println("Error." + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        super.dispose();
        GestionarProductos gpc = new GestionarProductos();
        gpc.setVisible(true);
        
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        String producto = validacionClave(txtProducto.getText(), "Clave del Producto", "po-", 5) ;

        PreparedStatement stmt = null;
        ResultSet rs = null;
        
        if(caso == 2){
            try {
                String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                        + "password = 123;encrypt=true;trustServerCertificate=true;";
                Connection conect = DriverManager.getConnection(connectionUrl);
                stmt = conect.prepareStatement("select ClaveProd from Productos where ClaveProd = '" + producto + "'");
                rs = stmt.executeQuery();
                if(!rs.next()){
                    System.out.println("Asd");
                }   else    {
                    stmt = conect.prepareStatement("select * from Productos where ClaveProd = '" + producto + "'");
                    rs = stmt.executeQuery();
                    while(rs.next()) {
                        for (int y=1;y<=rs.getMetaData().getColumnCount();y++){
                            switch(y){
                                case 2:
                                    txtNombre.setText(rs.getString(y));
                                    break;
                                case 3:    
                                    txtMarca.setText(rs.getString(y));
                                    break;
                                case 4:    
                                    txtContenido.setText(rs.getString(y));
                                    break;
                                case 5:    
                                    txtCantidad.setText(rs.getString(y));
                                    break;
                                case 6:
                                    txtCompra.setText(rs.getString(y));
                                    break;
                                case 7:    
                                    txtVenta.setText(rs.getString(y));
                                    break;
                                case 8:
                                    txtGanancia.setText(rs.getString(y));
                                    break;
                            }
                        }
                    }                        
                }
            } 
            catch (SQLException ex) 
            {
                System.out.println("Error." + ex.getMessage());
            }  
        }   else if(caso == 3)    {
            try {
                String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                        + "password = 123;encrypt=true;trustServerCertificate=true;";
                Connection conect = DriverManager.getConnection(connectionUrl);
                stmt = conect.prepareStatement("select ClaveProd from Productos where ClaveProd = '" + producto + "'");
                rs = stmt.executeQuery();
                if(!rs.next()){
                    System.out.println("Asd");
                }   else    {
                    stmt = conect.prepareStatement("select * from Productos where ClaveProd = '" + producto + "'");
                    rs = stmt.executeQuery();
                    while(rs.next()) {
                        for (int y=1;y<=rs.getMetaData().getColumnCount();y++){
                            switch(y){
                                case 2:
                                    txtNombre.setText(rs.getString(y));
                                    break;
                                case 3:    
                                    txtMarca.setText(rs.getString(y));
                                    break;
                                case 4:    
                                    txtContenido.setText(rs.getString(y));
                                    break;
                                case 5:    
                                    txtCantidad.setText(rs.getString(y));
                                    break;
                                case 6:
                                    txtCompra.setText(rs.getString(y));
                                    break;
                                case 7:    
                                    txtVenta.setText(rs.getString(y));
                                    break;
                                case 8:
                                    txtGanancia.setText(rs.getString(y));
                                    break;
                            }
                        }
                    }                
                    btnGuardar.setEnabled(true);                
                    txtNombre.setEnabled(true);
                    txtMarca.setEnabled(true);
                    txtContenido.setEnabled(true);
                    txtCantidad.setEnabled(true);
                    txtCompra.setEnabled(true);
                    txtVenta.setEnabled(true);
                    txtGanancia.setEnabled(true);                 
               }
            } 
            catch (SQLException ex) 
            {
                System.out.println("Error." + ex.getMessage());
            }
        }   else    {
            try {
                String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                        + "password = 123;encrypt=true;trustServerCertificate=true;";
                Connection conect = DriverManager.getConnection(connectionUrl);
                stmt = conect.prepareStatement("select ClaveProd from Productos where ClaveProd = '" + producto + "'");
                rs = stmt.executeQuery();
                if(!rs.next()){
                    System.out.println("Asd");
                }   else    {
                    stmt = conect.prepareStatement("select * from Productos where ClaveProd = '" + producto + "'");
                    rs = stmt.executeQuery();
                    while(rs.next()) {
                        for (int y=1;y<=rs.getMetaData().getColumnCount();y++){
                            switch(y){
                                case 2:
                                    txtNombre.setText(rs.getString(y));
                                    break;
                                case 3:    
                                    txtMarca.setText(rs.getString(y));
                                    break;
                                case 4:    
                                    txtContenido.setText(rs.getString(y));
                                    break;
                                case 5:    
                                    txtCantidad.setText(rs.getString(y));
                                    break;
                                case 6:
                                    txtCompra.setText(rs.getString(y));
                                    break;
                                case 7:    
                                    txtVenta.setText(rs.getString(y));
                                    break;
                                case 8:
                                    txtGanancia.setText(rs.getString(y));
                                    break;
                            }
                        }
                    } 
                    btnEliminar.setEnabled(true);                
               }
            } 
            catch (SQLException ex) 
            {
                System.out.println("Error." + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    public static String validacionClave(String Cadena, String valor, String tipo, int caracteres){
        boolean validado = false;
        float num;
        if(Cadena.length()!= caracteres) {
            JOptionPane.showMessageDialog(null, "Ingrese un valor para " + valor + ".");
            validado = false;
        } else if (Cadena.substring(0, tipo.length()).equals(tipo)) {
            for(int x = caracteres-2; x < Cadena.length(); x++){
                if(Cadena.charAt(x) >= '0' && Cadena.charAt(x) <= '9') {
                    validado = true;
                } else {
                    JOptionPane.showMessageDialog(null, "Ingrese un valor correcto para " + valor + ".");
                    validado = false;
                    break;               
                }   
            }  
        }
        if (validado) {
            return Cadena;
        }
        return "no";
    }
    
    public static String validacionTexto(String Cadena, String valor, int caracteres, boolean gato, boolean numeros){
        boolean validado = false;
        if(Cadena.equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese un valor para " + valor + ".");
            validado = false;
        } else if (Cadena.length() >= caracteres) {
            JOptionPane.showMessageDialog(null, "Ingrese dentro del rango establecido para " + valor + ".");
            validado = false;
            return "no";
        }
        for(int x = 0; x < Cadena.length(); x++){
            int num = (int) Cadena.charAt(x);
            if(((num >= 97 && num <= 122) || (num >= 65 && num <= 90)) || (Cadena.charAt(x) == '#' && gato) || ((Cadena.charAt(x) >= '0' && Cadena.charAt(x) <= '9')&&(numeros))) {
                validado = true;
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un valor correcto para " + valor + ".");
                validado = false;
                break;               
            }
        }  
        if (validado) {
            return Cadena;
        }
        return "no";
    }
    
    public static float validacionFloat(String numeroCad, String valor, int limEnteros, int limDecimales){
        boolean validado = false, puntoEx = false;
        float num, contEnteros = 0, contDecimales = 0;
        if(numeroCad.equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese un valor para " + valor + ".");
            validado = false;
        }
        for(int x = 0; x < numeroCad.length(); x++){
            if(numeroCad.charAt(x) >= '0' && numeroCad.charAt(x) <= '9') {
                validado = true;
                if (puntoEx == false) {
                    contEnteros++;
                } else {
                    contDecimales++;
                }
            } else if(numeroCad.charAt(x) == '.' && puntoEx == false) {
                validado = true;
                puntoEx = true;
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un valor correcto para " + valor + ".");
                validado = false;
                puntoEx = false;
                break;               
            }
            if(contEnteros > limEnteros) {
                validado = false;
                break;
            } else if (contDecimales > limDecimales) {
                validado = false;
                break;
            }
        }  
        if (validado) {
            num = Float.parseFloat(numeroCad);
            return num;
        }
        return -1.001f;
    }
    
    public static int validacionInt(String numeroCad, String valor, int longitud){
        boolean validado = false;
        int num, cont = 0;
        if(numeroCad.equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese un valor para " + valor + ".");
            validado = false;
        }
        for(int x = 0; x < numeroCad.length(); x++){
            if(numeroCad.charAt(x) >= '0' && numeroCad.charAt(x) <= '9') {
                validado = true;
                cont++;
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un valor correcto para " + valor + ".");
                validado = false;
                break;               
            }
            if(cont > longitud) {
                JOptionPane.showMessageDialog(null, "Ingrese un valor dentro del rango para " + valor + ".");
                validado = false;
                break;
            }
        }  
        if (validado) {
            num = Integer.parseInt(numeroCad);
            return num;
        }
        return -1;
    }
    
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        PreparedStatement stmt = null;
        String producto = txtProducto.getText();
        try {
            String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                    + "password = 123;encrypt=true;trustServerCertificate=true;";
            Connection conect = DriverManager.getConnection(connectionUrl);
           
            stmt = conect.prepareStatement("Delete FROM Productos where ClaveProd = '" + producto + "'");
            JOptionPane.showMessageDialog(null, "Producto eliminado con éxito.");
            super.dispose();
            GestionarProductos gestor = new GestionarProductos();
            gestor.setVisible(true);
            stmt.executeQuery();
            
         } 
        catch (SQLException ex) 
        {
          System.out.println("Error." + ex.getMessage());
        }  
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static float validacionFloat(String numeroCad, String valor){
        boolean validado = false, puntoEx = false;
        float num;
        if(numeroCad.equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese un valor para " + valor + ".");
            validado = false;
        }
        for(int x = 0; x < numeroCad.length(); x++){
            if(numeroCad.charAt(x) >= '0' && numeroCad.charAt(x) <= '9') {
                validado = true;
            } else if(numeroCad.charAt(x) == '.' && puntoEx == false) {
                validado = true;
                puntoEx = true;
            } else if(numeroCad.charAt(x) == '-') {
                validado = true;
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un valor correcto para " + valor + ".");
                validado = false;
                puntoEx = false;
                break;               
            }   
        }  
        if (validado) {
            num = Float.parseFloat(numeroCad);
            return num;
        }
        return -1.001f;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCompra;
    private javax.swing.JTextField txtContenido;
    private javax.swing.JTextField txtGanancia;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtProducto;
    private javax.swing.JTextField txtVenta;
    // End of variables declaration//GEN-END:variables
}
