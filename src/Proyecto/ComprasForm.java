/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Proyecto;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.*;
import javax.swing.JOptionPane;


/**
 *
 * @author MEMO
 */
public class ComprasForm extends javax.swing.JFrame {

    /**
     * Creates new form ComprasForm
     */
    
    static int caso;
    public ComprasForm(int x) {
        caso = x;
        initComponents();
        switch (caso){
            case 1:
                btnEliminar.setVisible(false);
                btnBuscar.setVisible(false);
                btnBuscarH.setVisible(true);
                btnAñadir.setVisible(true);
                btnGuardarH.setVisible(false);
                btnGuardar.setVisible(false);
                
                txtProducto.setEnabled(false);
                txtCompraH.setEnabled(true);
                txtProveedor.setEnabled(false);
                txtFecha.setEnabled(false);
                txtCosto.setEnabled(false);
                txtCompra.setEnabled(false);
                txtCantidad.setEnabled(false);
                txtSubtotal.setEnabled(false);
                
                break;
            case 2:
                btnEliminar.setVisible(false);
                btnBuscar.setVisible(false);
                btnBuscarH.setVisible(true);
                btnAñadir.setVisible(false);
                btnGuardarH.setVisible(false);
                btnGuardar.setVisible(false);
                
                txtProducto.setEnabled(false);
                txtCompraH.setEnabled(true);
                txtProveedor.setEnabled(false);
                txtFecha.setEnabled(false);
                txtCosto.setEnabled(false);
                txtCompra.setEnabled(false);
                txtCantidad.setEnabled(false);
                txtSubtotal.setEnabled(false);

                break;
            case 3:
                btnBuscar.setVisible(false);
                btnBuscarH.setVisible(true);
                btnGuardar.setVisible(false);
                btnGuardarH.setVisible(false);
                btnEliminar.setVisible(false);                
                btnAñadir.setVisible(false);
                
                txtProducto.setEnabled(false);
                txtCompraH.setEnabled(true);
                txtProveedor.setEnabled(false);
                txtFecha.setEnabled(false);
                txtCosto.setEnabled(false);
                txtCompra.setEnabled(false);
                txtCantidad.setEnabled(false);
                txtSubtotal.setEnabled(false);

                break;
            case 4:
                btnEliminar.setVisible(false);
                btnBuscarH.setVisible(true);
                btnBuscar.setVisible(false);
                btnGuardar.setVisible(false);
                btnGuardarH.setVisible(false);
                btnAñadir.setVisible(false);
                
                txtProducto.setEnabled(false);
                txtCompraH.setEnabled(true);
                txtProveedor.setEnabled(false);
                txtFecha.setEnabled(false);
                txtCosto.setEnabled(false);
                txtCompra.setEnabled(false);
                txtCantidad.setEnabled(false);
                txtSubtotal.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCompraH = new javax.swing.JTextField();
        txtProveedor = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        txtCosto = new javax.swing.JTextField();
        txtCompra = new javax.swing.JTextField();
        txtProducto = new javax.swing.JTextField();
        txtSubtotal = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnBuscarH = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnAñadir = new javax.swing.JButton();
        btnGuardarH = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel1.setText("Clave de la Compra:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel2.setText("Clave del Proveedor:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel3.setText("Fecha de la Compra:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel4.setText("Clave de la Compra:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel5.setText("Costo Total de la Compra:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel6.setText("Clave del Producto:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel7.setText("Cantidad de Productos:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel8.setText("Subtotal:");

        txtCompraH.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtCompraH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCompraHActionPerformed(evt);
            }
        });

        txtProveedor.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProveedorActionPerformed(evt);
            }
        });

        txtFecha.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaActionPerformed(evt);
            }
        });

        txtCosto.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtCosto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCostoActionPerformed(evt);
            }
        });

        txtCompra.setEditable(false);
        txtCompra.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCompraActionPerformed(evt);
            }
        });

        txtProducto.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductoActionPerformed(evt);
            }
        });

        txtSubtotal.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtSubtotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubtotalActionPerformed(evt);
            }
        });

        txtCantidad.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Compras");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        btnBuscarH.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        btnBuscarH.setText("Buscar");
        btnBuscarH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarHActionPerformed(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnRegresar.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 2, 36)); // NOI18N
        jLabel10.setText("Encabezado de la Compra");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 2, 36)); // NOI18N
        jLabel11.setText("Compra");

        btnBuscar.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnAñadir.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        btnAñadir.setText("Añadir");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });

        btnGuardarH.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        btnGuardarH.setText("Guardar");
        btnGuardarH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(46, 46, 46)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtCosto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCantidad, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtSubtotal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtCompraH, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(28, 28, 28)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(btnBuscarH, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                                    .addComponent(btnAñadir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(28, 28, 28)
                                                .addComponent(btnGuardarH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(71, 71, 71)
                                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(325, 325, 325)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(57, 83, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel10)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCompraH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarH))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAñadir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardarH))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btnBuscar))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnEliminar)
                    .addComponent(btnRegresar))
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCompraHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCompraHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCompraHActionPerformed

    private void txtProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProveedorActionPerformed

    private void txtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaActionPerformed

    private void txtCostoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCostoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCostoActionPerformed

    private void txtCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCompraActionPerformed

    private void txtProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductoActionPerformed

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadActionPerformed

    private void txtSubtotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubtotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSubtotalActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        
        String compra = validacionClave(txtCompraH.getText(),"Clave de la compra", "co-", 5);         
        String producto = validacionClave(txtProducto.getText(),"Clave del producto", "po-", 5);
        PreparedStatement stmt = null;
        ResultSet rs = null;
        
        if(!(compra == "no" || producto == "no")){
            try {
                String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                        + "password = 123;encrypt=true;trustServerCertificate=true;";
                Connection conect = DriverManager.getConnection(connectionUrl);
                stmt = conect.prepareStatement("select ClaveCompra from Reabastecen where ClaveCompra = '" + compra + "'");
                rs = stmt.executeQuery();
                if(!rs.next()){
                    System.out.println("Asd");
                }   else    {
                    stmt = conect.prepareStatement("select * from Reabastecen where ClaveCompra = '" + compra + "' and ClaveProd = '" + producto + "'");
                    rs = stmt.executeQuery();
                    while(rs.next()) {
                        for (int y=1;y<=rs.getMetaData().getColumnCount();y++){
                            switch(y){
                                case 2:
                                    txtProducto.setText(rs.getString(y));
                                    break;
                                case 3:    
                                    txtCantidad.setText(String.valueOf(rs.getInt(y)));
                                    break;
                                case 4:    
                                    txtSubtotal.setText(String.valueOf(rs.getFloat(y)));
                                    break;
                            }
                        }
                    }  
                    if(caso == 3){
                        btnGuardar.setVisible(true);
                        txtCantidad.setEnabled(true);
                        txtSubtotal.setEnabled(true);
                    }        
                }       
            } 
            catch (SQLException ex) 
            {
                System.out.println("Error." + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnBuscarHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarHActionPerformed
        // TODO add your handling code here:
        
        String compra = validacionClave(txtCompraH.getText(),"Clave de la compra", "co-", 5) ;        
        PreparedStatement stmt = null;
        ResultSet rs = null;
        
        try {
                String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                        + "password = 123;encrypt=true;trustServerCertificate=true;";
                Connection conect = DriverManager.getConnection(connectionUrl);
                stmt = conect.prepareStatement("select ClaveCompra from Encabezado_Compras where ClaveCompra = '" + compra + "'");
                rs = stmt.executeQuery();
                if(!rs.next()){
                    System.out.println("Asd");
                }   else    {
                    txtCompra.setText(txtCompraH.getText());
                    stmt = conect.prepareStatement("select * from Encabezado_Compras where ClaveCompra = '" + compra + "'");
                    rs = stmt.executeQuery();
                    while(rs.next()) {
                        for (int y=1;y<=rs.getMetaData().getColumnCount();y++){
                            switch(y){
                                case 2:
                                    txtProveedor.setText(rs.getString(y));
                                    break;
                                case 3:    
                                    txtCosto.setText(rs.getString(y));
                                    break;
                                case 4:                                        
                                    txtFecha.setText(rs.getString(y));
                                    break;
                                
                            }
                        }
                    }                                        
                    switch(caso){
                        case 1:
                            txtProveedor.setEnabled(false);
                            txtFecha.setEnabled(false);
                            txtCosto.setEnabled(false);
                            txtProducto.setEnabled(true);
                            txtCantidad.setEnabled(true);
                            txtSubtotal.setEnabled(true);

                            btnGuardar.setVisible(true);
                            btnGuardarH.setVisible(false);
                            break;
                        case 2:
                            txtProducto.setEnabled(true);

                            btnBuscar.setVisible(true);                          
                            break;
                        case 3:
                            txtProveedor.setEnabled(true);
                            txtFecha.setEnabled(true);
                            txtCosto.setEnabled(true);
                            txtProducto.setEnabled(true);
                            txtCantidad.setEnabled(false);
                            txtSubtotal.setEnabled(false);

                            btnBuscar.setVisible(true);
                            btnGuardar.setVisible(false);
                            btnGuardarH.setVisible(true);
                            break;
                        case 4:
                            txtProveedor.setEnabled(false);
                            txtFecha.setEnabled(false);
                            txtCosto.setEnabled(false);
                            txtProducto.setEnabled(true);
                            txtCantidad.setEnabled(false);
                            txtSubtotal.setEnabled(false);

                            btnBuscar.setVisible(true);
                            btnEliminar.setVisible(true);
                    }                    
                }       
            } 
            catch (SQLException ex) 
            {
                System.out.println("Error." + ex.getMessage());
            }  
        
    }//GEN-LAST:event_btnBuscarHActionPerformed

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed
        // TODO add your handling code here:
        PreparedStatement stmt = null;
        ResultSet rs = null;
        try {
            String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                    + "password = 123;encrypt=true;trustServerCertificate=true;";
            Connection conect = DriverManager.getConnection(connectionUrl);
            for(int i = 1; i<99; i ++){
                if(i < 10){
                    stmt = conect.prepareStatement("SELECT ClaveCompra FROM Encabezado_Compras where ClaveCompra = 'co-0" + i + "'");
                    rs = stmt.executeQuery();
                    if(!rs.next()){
                        txtCompraH.setText("co-0" + i);
                        txtCompra.setText("co-0" + i);
                        break;
                    }
                }   else    {
                    stmt = conect.prepareStatement("SELECT ClaveCompra FROM Encabezado_Compras where ClaveCompra = 'co-" + i + "'");
                    rs = stmt.executeQuery();
                    if(!rs.next()){
                        txtCompraH.setText("co-" + i);
                        txtCompra.setText("co-" + i);
                        break;
                    }

                }
            }
            txtProveedor.setEnabled(true);
            txtFecha.setEnabled(true);
            txtCosto.setEnabled(true);
            
            btnGuardarH.setVisible(true);
        } 
        catch (SQLException ex) 
        {
          System.out.println("Error." + ex.getMessage());
        }       
    }//GEN-LAST:event_btnAñadirActionPerformed

    private void btnGuardarHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarHActionPerformed
        // TODO add your handling code here:
        
        String compra = validacionClave(txtCompraH.getText(), "Clave de la compra", "co-", 5);
        String proveedor = validacionClave(txtProveedor.getText(), "Clave del Proveedor", "p-",4);
        String fecha = validacionFecha(txtFecha.getText(), "Fecha de la Compra");
        float costo = validacionFloat(txtCosto.getText(), "Costo total de la Compra", 2,2);
        PreparedStatement stmt = null;
        if(!(compra == "no" || proveedor == "no" || fecha == "no" || costo == -1.001)){
            try {
                String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                        + "password = 123;encrypt=true;trustServerCertificate=true;";
                Connection conect = DriverManager.getConnection(connectionUrl);
                if(caso == 1){
                    txtProducto.setEnabled(true);
                    txtCantidad.setEnabled(true);
                    txtSubtotal.setEnabled(true);   

                    btnGuardar.setVisible(true);
                    stmt = conect.prepareStatement("insert into Encabezado_Compras values('" + compra + "', '" + proveedor +"', " + costo + ", '" + fecha + "')");
                    stmt.executeQuery();



                }  else    {
                   stmt = conect.prepareStatement("update Encabezado_Compras set ClaveProveedor = '" + proveedor +
                           "', CostoCompraTotal = " + costo + ", FechaReabas = '" + fecha + "' where ClaveCompra = '" + compra + "'"
                           );
                   stmt.executeQuery();               
                }

            } 
            catch (SQLException ex) 
            {
              System.out.println("Error." + ex.getMessage());
            }
        }
        
    }//GEN-LAST:event_btnGuardarHActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        
        String compra = validacionClave(txtCompraH.getText(),"Clave de la compra", "co-", 5) ;
        String producto = validacionClave(txtProducto.getText(),"Clave del producto", "po-", 5);
        int cantidad = validacionInt(txtCantidad.getText(), "Cantidad", 2);
        float subtotal = validacionFloat(txtSubtotal.getText(),"Subtotal", 4,2);
        PreparedStatement stmt = null;
        if(!(compra == "no" || producto == "no" || cantidad == -1 || subtotal == -1.001)){
            try {
                String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                        + "password = 123;encrypt=true;trustServerCertificate=true;";
                Connection conect = DriverManager.getConnection(connectionUrl);
                if(caso == 1){
                    stmt = conect.prepareStatement("insert into Reabastecen values('" + compra + "', '" + producto +"', " + cantidad + ", " + subtotal + ")");
                    JOptionPane.showMessageDialog(null, "Compra ingresada con exito.");
                    super.dispose();
                    GestorCompras gestor = new GestorCompras();
                    gestor.setVisible(true);
                    stmt.executeQuery();               
                }  else    {
                   stmt = conect.prepareStatement("update Reabastecen set CantidadProdCompra = " + cantidad + ", Subtotal = " 
                           + subtotal + " where ClaveProd = '" + producto + "' and ClaveCompra = '" + compra + "'"
                           );
                   JOptionPane.showMessageDialog(null, "Compra modificada con exito.");
                   stmt.executeQuery();               
                }

            } 
            catch (SQLException ex) 
            {
                System.out.println("Error." + ex.getMessage());
            } 
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        
        PreparedStatement stmt = null;
        String compra = txtCompraH.getText();

        try {
            String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                    + "password = 123;encrypt=true;trustServerCertificate=true;";
            Connection conect = DriverManager.getConnection(connectionUrl);
                stmt = conect.prepareStatement("Delete FROM Reabastecen where ClaveCompra = '" + compra + "'");
                stmt.executeQuery();
              
        } 
        catch (SQLException ex) 
        {
            System.out.println("Error." + ex.getMessage());
            try {
                String connectionUrl = "jdbc:sqlserver://localhost:1433;database=GestionCajetas;user=user; "
                        + "password = 123;encrypt=true;trustServerCertificate=true;";
                Connection conect = DriverManager.getConnection(connectionUrl);

                    stmt = conect.prepareStatement("Delete FROM Encabezado_Compras where ClaveCompra = '" + compra + "'");
                     JOptionPane.showMessageDialog(null, "Compra cancelada con éxito.");
                    super.dispose();
                    GestorCompras gestor = new GestorCompras();
                    gestor.setVisible(true);
                    stmt.executeQuery();       
            } 
            catch (SQLException e) 
            {
                System.out.println("Error." + ex.getMessage());
            } 
        } 
    }//GEN-LAST:event_btnEliminarActionPerformed

    public static String validacionClave(String Cadena, String valor, String tipo, int caracteres){
        boolean validado = false;
        float num;
        if(Cadena.length()!= caracteres) {
            JOptionPane.showMessageDialog(null, "Ingrese un valor para " + valor + ".");
            validado = false;
        } else if (Cadena.substring(0, tipo.length()).equals(tipo)) {
            for(int x = caracteres-2; x < Cadena.length(); x++){
                if(Cadena.charAt(x) >= '0' && Cadena.charAt(x) <= '9') {
                    validado = true;
                } else {
                    JOptionPane.showMessageDialog(null, "Ingrese un valor correcto para " + valor + ".");
                    validado = false;
                    break;               
                }   
            }  
        }
        if (validado) {
            return Cadena;
        }
        return "no";
    }
    
    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        
        super.dispose();
        GestorCompras gc = new GestorCompras();
        gc.setVisible(true);
        
    }//GEN-LAST:event_btnRegresarActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static String validacionTexto(String Cadena, String valor, int caracteres, boolean gato, boolean numeros){
        boolean validado = false;
        if(Cadena.equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese un valor para " + valor + ".");
            validado = false;
        } else if (Cadena.length() >= caracteres) {
            JOptionPane.showMessageDialog(null, "Ingrese dentro del rango establecido para " + valor + ".");
            validado = false;
            return "no";
        }
        for(int x = 0; x < Cadena.length(); x++){
            int num = (int) Cadena.charAt(x);
            if(((num >= 97 && num <= 122) || (num >= 65 && num <= 90)) || (Cadena.charAt(x) == '#' && gato) || ((Cadena.charAt(x) >= '0' && Cadena.charAt(x) <= '9')&&(numeros))) {
                validado = true;
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un valor correcto para " + valor + ".");
                validado = false;
                break;               
            }
        }  
        if (validado) {
            return Cadena;
        }
        return "no";
    }
    
    public static String validacionFecha(String Cadena, String valor) {
        boolean validado = false, mesListo = false, diaListo = false, noPasar = false;
        int mes = 0, limDia = 0, dia = 0;
        if(Cadena.length()!= 10) {
            JOptionPane.showMessageDialog(null, "Ingrese una fecha correcto para " + valor + ".");
            validado = false;
            System.out.println(1);
            return "no";
        }
        for(int x = 0; x < Cadena.length(); x++){
            if(mes<12 && mesListo == true){    
                if (x == 2 && (Cadena.charAt(x) == '/' || Cadena.charAt(x) == '-')) {
                    validado = true;
                    noPasar = true;
                } else if(x == 2) {
                    JOptionPane.showMessageDialog(null, "Ingrese una fecha correcto para " + valor + ".");
                    validado = false;
                    System.out.println(2);
                    return "no";
                }
                switch(mes){
                    case 1:
                        limDia = 31;
                        break;
                    case 2:
                        limDia = 28;
                        break;
                    case 3:
                        limDia = 31;
                        break;
                    case 4:
                        limDia = 30;
                        break;
                    case 5:
                        limDia = 31;
                        break;
                    case 6:
                        limDia = 30;
                        break;
                    case 7:
                        limDia = 31;
                        break;
                    case 8:
                        limDia = 31;
                        break;
                    case 9:
                        limDia = 30;
                        break;
                    case 10:
                        limDia = 31;
                        break;
                    case 11:
                        limDia = 30;
                        break;
                    case 12:
                        limDia = 31;
                        break;
                }
            } else if (mesListo == true) {
                JOptionPane.showMessageDialog(null, "Ingrese una mes correcto para " + valor + ".");
                validado = false;
                return "no";
            }
            
            if(dia<limDia && diaListo == true){    
                if (x == 5 && (Cadena.charAt(x) == '/' || Cadena.charAt(x) == '-')) {
                    validado = true;
                    noPasar = true;
                } else if(x == 5) {
                    JOptionPane.showMessageDialog(null, "Ingrese una fecha correcto para " + valor + ".");
                    validado = false;
                    System.out.println(3);
                    return "no";
                }
            } else if (diaListo == true) {
                JOptionPane.showMessageDialog(null, "Ingrese una dia correcto para " + valor + ".");
                validado = false;
                return "no";
            }
            
            if(Cadena.charAt(x) >= '0' && Cadena.charAt(x) <= '9' && noPasar == false) {
                validado = true;
                if(x<2) {
                    mes += Integer.parseInt(Cadena.charAt(x) + "");
                    if(x == 0)
                        mes = mes*10;
                    else
                        mesListo = true;
                } else if (x<5) {
                    dia += Integer.parseInt(Cadena.charAt(x) + "");
                    if(x == 3)
                        dia = dia*10;
                    else
                        diaListo = true;
                }
            } else if(noPasar == false) {
                JOptionPane.showMessageDialog(null, "Ingrese una fecha correcto para " + valor + ".");
                validado = false;
                System.out.println(4);
                return "no";              
            }   
            noPasar = false;
        }
        if (validado) {
            return Cadena;
        }
        return "no";
    }

    public static float validacionFloat(String numeroCad, String valor, int limEnteros, int limDecimales){
        boolean validado = false, puntoEx = false;
        float num, contEnteros = 0, contDecimales = 0;
        if(numeroCad.equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese un valor para " + valor + ".");
            validado = false;
        }
        for(int x = 0; x < numeroCad.length(); x++){
            if(numeroCad.charAt(x) >= '0' && numeroCad.charAt(x) <= '9') {
                validado = true;
                if (puntoEx == false) {
                    contEnteros++;
                } else {
                    contDecimales++;
                }
            } else if(numeroCad.charAt(x) == '.' && puntoEx == false) {
                validado = true;
                puntoEx = true;
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un valor correcto para " + valor + ".");
                validado = false;
                puntoEx = false;
                break;               
            }
            if(contEnteros > limEnteros) {
                validado = false;
                break;
            } else if (contDecimales > limDecimales) {
                validado = false;
                break;
            }
        }  
        if (validado) {
            num = Float.parseFloat(numeroCad);
            return num;
        }
        return -1.001f;
    }

    public static int validacionInt(String numeroCad, String valor, int longitud){
        boolean validado = false;
        int num, cont = 0;
        if(numeroCad.equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese un valor para " + valor + ".");
            validado = false;
        }
        for(int x = 0; x < numeroCad.length(); x++){
            if(numeroCad.charAt(x) >= '0' && numeroCad.charAt(x) <= '9') {
                validado = true;
                cont++;
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un valor correcto para " + valor + ".");
                validado = false;
                break;               
            }
            if(cont > longitud) {
                JOptionPane.showMessageDialog(null, "Ingrese un valor dentro del rango para " + valor + ".");
                validado = false;
                break;
            }
        }  
        if (validado) {
            num = Integer.parseInt(numeroCad);
            return num;
        }
        return -1;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ComprasForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ComprasForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ComprasForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ComprasForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ComprasForm(caso).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarH;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardarH;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCompra;
    private javax.swing.JTextField txtCompraH;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtProducto;
    private javax.swing.JTextField txtProveedor;
    private javax.swing.JTextField txtSubtotal;
    // End of variables declaration//GEN-END:variables
}
